import xbmc,xbmcaddon,xbmcgui,xbmcplugin,urllib,urllib2,os,re,sys,datetime,hashlib,urlresolver,time,liveresolverimport base64import HTMLParserimport osfrom resources.libs.modules import satoolsaddon_id        = 'plugin.video.streamarmy'AddonTitle      = "[COLOR red][B]STREAM ARMY[/B][/COLOR]"fanart          = xbmc.translatePath(os.path.join('special://home/addons/' + addon_id , 'fanart.jpg'))fanarts         = xbmc.translatePath(os.path.join('special://home/addons/' + addon_id , 'fanart.jpg'))icon            = xbmc.translatePath(os.path.join('special://home/addons/' + addon_id, 'icon.png'))dialog          = xbmcgui.Dialog()dp              = xbmcgui.DialogProgress()def TV_SCHED():    url = 'http://www.watchepisodeseries.com/home/schedule'    link = satools.open_url(url)    match = re.compile('<div class="schedule-calendar">(.+?)</div>').findall(link)[0]    grab = re.compile ('<a href="(.+?)" class="passive"><span>(.+?)</span><br>(.+?)</a>').findall(match)    for url,date,month in grab:        satools.addDir("[COLOR silver]" + date + "  " + month + "[/COLOR]",url,17,icon,fanart)    satools.SET_VIEW()    def TV_SCHED_CONTENT(url):    link = satools.open_url(url)    match = re.compile('<div class="sl-box">(.+?)</div>').findall(link)    for links in match:        title = re.compile ('<a href=".+?">(.+?)</a>').findall(links)[1]        title = satools.CLEANUP(title)        url = re.compile ('<a href="(.+?)"').findall(links)[0]        iconimage = re.compile ('style="background-image:.+?\'(.+?)\'').findall(links)[0]        fanart = re.compile ('style="background-image:.+?\'(.+?)\'').findall(links)[0]        satools.addDir("[COLOR silver]" + title + "[/COLOR]",url,18,iconimage,fanart)    satools.SET_VIEW()    def TV_SCHED_CONTENT_GRAB(url,iconimage,fanart):    link = satools.open_url(url)    match1 = re.compile('<ul class="sd-gallery">(.+?)</li>').findall(link)    for links in match1:        fanart = re.compile ('data-src="(.+?)"').findall(links)[0]    match = re.compile('<div class="watched">(.+?)<div class="el-item">').findall(link)    i = datetime.datetime.now()    for links in match:        try:            url = re.compile ('<a href="(.+?)"').findall(links)[0]            title = re.compile ('<div class="name">(.+?)</div>').findall(links)[0]            title = satools.CLEANUP(title)            season = re.compile ('<div class="season">(.+?)</div>').findall(links)[0]            epi = re.compile ('<div class="episode">(.+?)</div>').findall(links)[0]            date = re.compile ('<div class="date">(.+?)</div>').findall(links)[0].replace('-', '/')            if 'Air Date' not in date:                date = date.strip()                date = time.strptime(date, "%d/%m/%Y")                currentdate = ("%s/%s/%s" % (i.day, i.month, i.year) )                currentdate = time.strptime(currentdate, "%d/%m/%Y")                if (currentdate < date):                    title = '[COLOR red]' + (title) + ' - Not Aired Yet' + '[/COLOR]'                    epi = '[COLOR red]' + (epi) + '[/COLOR]'#                    season = '[COLOR red]' + (season) + '[/COLOR]'                                    if not 'Season 0' in season:                        satools.addDir("[COLOR silver]" + season + " " + epi + " " + title + "[/COLOR]",url,19,iconimage,fanart)        except:pass    satools.SET_VIEW()     def TV_SCHED_CONTENT_GRAB_LINKS(url,iconimage,fanart):    link = satools.open_url(url)    match = re.compile('<div class="domain">(.+?)<div class="watch"').findall(link)    for links in match:        try:            title = re.compile ('<a href=".+?">(.+?)</a>').findall(links)[0]            title = title.title()            url = re.compile ('<a href="(.+?)"').findall(links)[0]            if not 'Lolzor.Com' in title:                if not 'Videoplayer.Gq' in title:                    if not 'Vidbaba.Com' in title:                        if not 'Gagomatic.Com' in title:                            if not 'Favour.Me' in title:                                if not 'Funblr.Com' in title:                                    if not 'Vid.Ag' in title:                                        if not 'Mycollection.Net' in title:                                            if not 'Adhqmedia.Com' in title:                                                if not 'Filenuke.Com' in title:                                                    if not 'Mrfile.Me' in title:                                                        satools.addLink("[COLOR silver]" + title + "[/COLOR]",url,20,iconimage,fanart)        except:pass    satools.SET_VIEW()    def TV_SCHED_CONTENT_GRAB_LINKS_PLAY(url,iconimage,fanart):    dp.create(AddonTitle,"[COLOR yellow]Generating link...[/COLOR]",'[COLOR red]Please wait...[/COLOR]','')       dp.update(0)    time.sleep(1)    link = satools.open_url(url)    match = re.compile('<div class="wb-main">(.+?)</div>').findall(link)    for links in match:        url = re.compile ('href="(.+?)"').findall(links)[0]        import urlresolver        try:            if urlresolver.HostedMediaFile(url).valid_url():                 stream_url = urlresolver.HostedMediaFile(url).resolve()            elif liveresolver.isValid(url)==True:                 stream_url=liveresolver.resolve(url)            else: stream_url=url            liz = xbmcgui.ListItem(iconImage='DefaultVideo.png', thumbnailImage=iconimage)            liz.setPath(stream_url)            xbmcplugin.setResolvedUrl(int(sys.argv[1]), True, liz)            xbmc.Player().play(stream_url)                    except:            dialog.ok(AddonTitle, "[COLOR yellow]Sorry, It seems the file has been removed at source,\nPlease try another link!\n[COLOR white]Stream Army[/COLOR]")def TV_SEARCH():    string =''    keyboard = xbmc.Keyboard(string, 'Enter Search Term')    keyboard.doModal()    if keyboard.isConfirmed():        string = keyboard.getText()        if len(string)>1:            term = string.lower()            term = term.replace(' ', '%20')                    else: quit()    else: term = urllib.unquote_plus(url).lower(); string = urllib.unquote_plus(url)    url = base64.b64decode (b'aHR0cDovL3d3dy53YXRjaGVwaXNvZGVzZXJpZXMuY29tL2hvbWUvc2VhcmNoP3E9') + term    link = satools.open_url(url)    match = re.compile('"series"(.+?)"series_id"').findall(link)    for links in match:        title = re.compile ('original_name":"(.+?)"').findall(links)[0]        url1 = re.compile ('"seo_name":"(.+?)"').findall(links)[0]        url = 'http://www.watchepisodeseries.com/' + url1        icon = 'http://www.watchepisodeseries.com/series_images/' + url1 + '.jpg'        satools.addDir(title,url,18,icon,fanart,'')    