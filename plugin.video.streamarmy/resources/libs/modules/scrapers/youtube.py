import xbmc,xbmcaddon,xbmcgui,xbmcplugin,urllib,urllib2,os,re,sys,datetime,hashlib,timeimport base64import HTMLParserimport osfrom resources.libs.modules import satoolsaddon_id        = 'plugin.video.streamarmy'AddonTitle      = "[COLOR red][B]STREAM ARMY[/B][/COLOR]"fanart          = xbmc.translatePath(os.path.join('special://home/addons/' + addon_id , 'fanart.jpg'))fanarts         = xbmc.translatePath(os.path.join('special://home/addons/' + addon_id , 'fanart.jpg'))icon            = xbmc.translatePath(os.path.join('special://home/addons/' + addon_id, 'icon.png'))dialog          = xbmcgui.Dialog()dp              = xbmcgui.DialogProgress()def YOUTUBE_CHANNEL(url):    link = satools.open_url(url)    match = re.compile ('<div class="yt-lockup-content">(.+?)<div class="yt-lockup-meta">').findall(link)    for links in match:        title = re.compile ('title="(.+?)"').findall(links)[0]        title = satools.CLEANUP(title)        title = satools.strip_non_ascii(title)        url1 = re.compile ('href="(.+?)"').findall(links)[0]        url = 'https://www.youtube.com' + url1        icon = 'http://i.imgur.com/P5HLzGl.png'        satools.addDir(title,url,72,icon,fanart)        def YOUTUBE_CHANNEL_PART2(url):    link = satools.open_url(url)    match = re.compile('<tr class="pl-video yt-uix-tile "(.+?)<span class="vertical-align">').findall(link)    for links in match:        title = re.compile ('title="(.+?)">').findall(links)[0]        title = satools.CLEANUP(title)        title = satools.strip_non_ascii(title)        url1 = re.compile ('<a href="(.+?)"').findall(links)[0]        url = 'https://www.youtube.com' + url1        icon = re.compile ('data-thumb="(.+?)"').findall(links)[0].replace('&amp;', '&')        satools.addDir(title,url,45,icon,fanart)        def YOUTUBE_PLAYLIST(url):    link = satools.open_url(url)    match = re.compile('yt-lockup-playlist yt-lockup-grid"(.+?)<div class="yt-lockup-meta">').findall(link)    for links in match:        url = re.compile ('<a href="(.+?)"').findall(links)[0]        icon = re.compile ('data-thumb="(.+?)"').findall(links)[0].replace('&amp;', '&')        title = re.compile ('<div class="yt-lockup-content">.+?title="(.+?)"').findall(links)[0]        title = satools.CLEANUP(title)        if not 'http' in url:            url1 = 'https://www.youtube.com/' + url            satools.addDir(title,url1,43,icon,fanart)    satools.SET_VIEW()def YOUTUBE_PLAYLIST_PLAY(url):        link = satools.open_url(url)    match = re.compile('<li class="yt-uix-scroller-scroll-unit(.+?)<span class="vertical-align">').findall(link)    for links in match:        title = re.compile ('video-title="(.+?)"',re.DOTALL).findall(links)[0]        title = satools.CLEANUP(title)        icon = re.compile ('url="(.+?)"',re.DOTALL).findall(links)[0].replace('&amp;', '&')        fanart = re.compile ('url="(.+?)"',re.DOTALL).findall(links)[0].replace('&amp;', '&')        url = re.compile ('<a href="(.+?)"').findall(links)[0]        if not 'http' in url:            if not 'Deleted video' in title:                url1 = 'https://www.youtube.com' + url                satools.addLink(title,url1,45,icon,fanart)               def YOUTUBE_LIVE(url):    link = satools.open_url(url)    match = re.compile('<div class="yt-lockup yt-lockup-tile yt-lockup-video vve-check clearfix"(.+?)</h3>').findall(link)    for links in match:        #try:        title = re.compile ('title="(.+?)"').findall(links)[2]        title = satools.CLEANUP(title)        url = re.compile ('<a href="(.+?)"').findall(links)[0]        icon = re.compile ('//i.ytimg.com(.+?)"',re.DOTALL).findall(links)[0].replace('&amp;', '&')        if not 'http' in icon:            url1 = 'https://www.youtube.com/' + url            iconimage = 'http:' + '//i.ytimg.com' + icon            fanart = iconimage            satools.addLink(title,url1,45,iconimage,fanart)        #except:pass            # try:        # nextpage = re.compile ('<a href="(.+?)".+?Next.+?</span></a>').findall(link)[1]        # if 'http' not in nextpage:            # np = 'https://www.youtube.com' + nextpage            # icon = 'http://i.imgur.com/A8JicdZ.jpg'            # fanart = 'http://i.imgur.com/aBPuL5Z.jpg'            # satools.addDir("Next Page",np,44,icon,fanart)    # except:pass    #satools.SET_VIEW()    def SCRAPE_YOUTUBE_PLAY_LINK(name,url):    dp.create(AddonTitle,"[COLOR yellow]Generating link...[/COLOR]",'[COLOR red]Please wait...[/COLOR]','')       dp.update(0)    time.sleep(1)    import urlresolver        if urlresolver.HostedMediaFile(url).valid_url():         stream_url = urlresolver.HostedMediaFile(url).resolve()        liz = xbmcgui.ListItem(name,iconImage=icon, thumbnailImage=icon)        liz.setPath(stream_url)        dp.close()        xbmc.Player ().play(stream_url, liz, False)        quit()    else:        stream_url=url        liz = xbmcgui.ListItem(name,iconImage=icon, thumbnailImage=icon)        liz.setPath(stream_url)        dp.close()        xbmc.Player ().play(stream_url, liz, False)        quit()        